# $Id$
#
# Preliminary experiment with pylint.  Its default coding style
# differs enough from mine that it's not really usable without
# customization.  Useful options: --help, --generate-rcfile.

# Note that, in addition to disabling unhelpful messages globally, one
# can disable specific messages for an entire module or for a specific
# known issue, using magic comments in the Python source code.  Form
# of the comment is the same in either case, how much it controls
# depends on the scope in which one places the comment.  Format:
#
#  # pylint: disable=code,code,...
#
# At top level in a module (eg, right before first import), it
# disables for a module.  Within blocks (eg, as a comment on the line
# defining formal parameters to a function) it only in that scope.

[MASTER]

profile=no
ignore=.svn
persistent=yes
cache-size=500
load-plugins=

[MESSAGES CONTROL]

# Enable only checker(s) with the given id(s). This option conflicts with the
# disable-checker option
#enable-checker=

# Enable all checker(s) except those with the given id(s). This option
# conflicts with the enable-checker option
#disable-checker=

# Enable all messages in the listed categories (IRCWEF).
#enable-msg-cat=

# Disable all messages in the listed categories (IRCWEF).
disable-msg-cat=

# Enable the message(s) with the given id(s).
#enable-msg=

# Disable the message(s) with the given id(s).
disable=R0801,R0903,R0913,C0321,R0904,W0201,E1101,W0614,C0301,R0901,C0302,R0902,R0201,W0613,R0912,R0915,W0703,W0212,R0914,W0603,W0142,I0011,C0111,C0103,R0401,C0326,R0911,C0325

[REPORTS]

#output-format=parseable
msg-template={path}:{line}: [{msg_id}({symbol}), {obj}] {msg}

include-ids=yes
files-output=no
reports=no
evaluation=10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)
comment=no

[VARIABLES]

# Tells wether we should check for unused import in __init__ files.
init-import=no

# A regular expression matching names used for dummy variables (i.e. not used).
dummy-variables-rgx=ignored

# List of additional names supposed to be defined in builtins. Remember that
# you should avoid to define new builtins when possible.
additional-builtins=

[TYPECHECK]

# Tells wether missing members accessed in mixin class should be ignored. A
# mixin class is detected if its name ends with "mixin" (case insensitive).
ignore-mixin-members=no

# List of classes names for which member attributes should not be checked
# (useful for classes with attributes dynamicaly set).
ignored-classes=SQLObject

# When zope mode is activated, add a predefined set of Zope acquired attributes
# to generated-members.
zope=no

# List of members which are set dynamically and missed by pylint inference
# system, and so shouldn't trigger E0201 when accessed.
generated-members=

[BASIC]

# Required attributes for module, separated by a comma
required-attributes=

# Regular expression which should only match functions or classes name which do
# not require a docstring
no-docstring-rgx=__.*__|usage

# Regular expression which should only match correct module names
module-rgx=(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$

# Regular expression which should only match correct module level names
const-rgx=(([a-zA-Z_][a-zA-Z0-9_]*)|(__.*__))$

# Regular expression which should only match correct class names
class-rgx=[a-zA-Z_][a-zA-Z0-9_]+$

# Regular expression which should only match correct function names
function-rgx=[a-zA-Z_][a-zA-Z0-9_]+$

# Regular expression which should only match correct method names
method-rgx=[a-zA-Z_][a-zA-Z0-9_]+$

# Regular expression which should only match correct instance attribute names
attr-rgx=[a-zA-Z_][a-zA-Z0-9_]*$

# Regular expression which should only match correct argument names
argument-rgx=[a-zA-Z_][a-zA-Z0-9_]*$

# Regular expression which should only match correct variable names
variable-rgx=[a-zA-Z_][a-zA-Z0-9_]*$

# Regular expression which should only match correct list comprehension /
# generator expression variable names
inlinevar-rgx=[a-zA-Z_][a-zA-Z0-9_]*$

# Good variable names which should always be accepted, separated by a comma
good-names=

# Bad variable names which should always be refused, separated by a comma
bad-names=

# List of builtins function names that should not be used, separated by a comma
bad-functions=map,filter,apply,input

[IMPORTS]

# Deprecated modules which should not be used, separated by a comma
deprecated-modules=regsub,string,TERMIOS,Bastion,rexec

# Create a graph of every (i.e. internal and external) dependencies in the
# given file (report R0402 must not be disabled)
import-graph=

# Create a graph of external dependencies in the given file (report R0402 must
# not be disabled)
ext-import-graph=

# Create a graph of internal dependencies in the given file (report R0402 must
# not be disabled)
int-import-graph=

[DESIGN]

# Maximum number of arguments for function / method
max-args=5

# Maximum number of locals for function / method body
max-locals=15

# Maximum number of return / yield for function / method body
max-returns=6

# Maximum number of branch for function / method body
max-branchs=12

# Maximum number of statements in function / method body
max-statements=50

# Maximum number of parents for a class (see R0901).
max-parents=7

# Maximum number of attributes for a class (see R0902).
max-attributes=7

# Minimum number of public methods for a class (see R0903).
min-public-methods=2

# Maximum number of public methods for a class (see R0904).
max-public-methods=20

[CLASSES]

# List of interface methods to ignore, separated by a comma.
ignore-iface-methods=

# List of method names used to declare (i.e. assign) instance attributes.
defining-attr-methods=__init__,__new__,setUp

[FORMAT]

# Maximum number of characters on a single line.
max-line-length=80

# Maximum number of lines in a module
max-module-lines=1000

# String used as indentation unit.
indent-string='    '

[SIMILARITIES]

# Minimum lines number of a similarity.
min-similarity-lines=4

# Ignore comments when computing similarities.
ignore-comments=yes

# Ignore docstrings when computing similarities.
ignore-docstrings=yes

[MISCELLANEOUS]

# List of note tags to take in consideration, separated by a comma.
notes=FIXME,XXX,TODO
